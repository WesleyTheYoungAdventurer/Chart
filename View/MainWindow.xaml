<Window
    x:Class="Chart.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:sci="http://schemas.abtsoftware.co.uk/scichart"
    Title="Chart"
    Width="1035"
    Height="600"
    MinWidth="1050"
    MinHeight="600"
    Topmost="True"
    WindowStartupLocation="CenterScreen"
    mc:Ignorable="d">
    <Window.Resources>
        <!--<converter:TipConverter x:Key="tipConverter" />-->
        <!--  XY Axis Title Style  -->
        <DataTemplate x:Key="xyTitle">
            <StackPanel>
                <TextBlock Text="{Binding Title}" />
            </StackPanel>
        </DataTemplate>
        <Style x:Key="listBoxItem" TargetType="ListBoxItem">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border
                            Name="Border"
                            Padding="1,1,1,1"
                            Background="Transparent"
                            CornerRadius="5"
                            SnapsToDevicePixels="True">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#326cf3" />
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                    <Setter Property="IsSelected" Value="true" />
                </Trigger>

                <EventTrigger RoutedEvent="PreviewGotKeyboardFocus">
                    <BeginStoryboard>
                        <Storyboard>
                            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(ListBoxItem.IsSelected)">
                                <DiscreteBooleanKeyFrame KeyTime="0" Value="True" />
                            </BooleanAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid Background="#f0f0f0">
        <Grid.RowDefinitions>
            <RowDefinition Height="40" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <StackPanel
            Grid.Row="0"
            Margin="5"
            Orientation="Horizontal">
            <Button
                Width="60"
                Margin="0,0,5,0"
                Command="{Binding OpenPathCommand}"
                Content="路径" />
            <TextBox
                Width="450"
                HorizontalContentAlignment="Left"
                VerticalContentAlignment="Center"
                Text="{Binding FullPath}" />
            <Label
                Margin="13,0,0,0"
                VerticalAlignment="Center"
                Content="X轴" />
            <ComboBox
                Width="200"
                VerticalContentAlignment="Center"
                ItemTemplate="{StaticResource xyTitle}"
                ItemsSource="{Binding ArrayTitle}"
                SelectedIndex="{Binding XAxisSelect}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding SelectItemChangedCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>
            <Label
                Margin="13,0,0,0"
                VerticalAlignment="Center"
                Content="Y轴" />
            <ComboBox
                Width="200"
                VerticalContentAlignment="Center"
                ItemTemplate="{StaticResource xyTitle}"
                ItemsSource="{Binding ArrayTitle}"
                SelectedIndex="{Binding YAxisSelect}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding SelectItemChangedCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>
        </StackPanel>
        <Grid Grid.Row="1" Margin="5,0,5,5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="150" />
            </Grid.ColumnDefinitions>
            <Border
                Grid.Column="0"
                Margin="0,0,5,0"
                Background="White">
                <sci:SciChartSurface ChartTitle="{Binding ChartTitle}" RenderableSeries="{sci:SeriesBinding RenderableSeries}">

                    <sci:SciChartSurface.ChartModifier>
                        <sci:ModifierGroup>
                            <!--  adding Zoomin, Panning to Chart  -->
                            <sci:RubberBandXyZoomModifier IsEnabled="{Binding EnableZoom}" />
                            <sci:ZoomPanModifier ClipModeX="None" IsEnabled="{Binding EnablePan}" />
                            <!--  Allow Dragging XAxis to Scale  -->
                            <sci:XAxisDragModifier DragMode="Scale" />
                            <!--  allow Dragging YAxis to Pan  -->
                            <sci:YAxisDragModifier DragMode="Pan" />
                            <!--  allow mousewheel zoom  -->
                            <sci:MouseWheelZoomModifier />
                            <!--  allow zoom to extents on double click  -->
                            <sci:ZoomExtentsModifier />

                            <!--  adding Tooltips, Legends to Chart  -->
                            <sci:LegendModifier
                                GetLegendDataFor="SelectedSeries"
                                ShowLegend="True"
                                ShowVisibilityCheckboxes="False" />
                            <sci:TooltipModifier IsEnabled="False" ShowTooltipOn="Always" />
                            <sci:RolloverModifier
                                IsEnabled="{Binding EnableTip}"
                                ShowAxisLabels="True"
                                ShowTooltipOn="Always" />
                            <sci:CursorModifier
                                ShowAxisLabels="True"
                                ShowTooltip="False"
                                UseInterpolation="True" />

                            <sci:SeriesSelectionModifier>
                                <sci:SeriesSelectionModifier.SelectedSeriesStyle>
                                    <!--  When a series is selected (on click), apply this style  -->
                                    <!--  Applies a PointMarker on click  -->
                                    <Style TargetType="sci:BaseRenderableSeries">
                                        <Setter Property="StrokeThickness" Value="5" />
                                        <Setter Property="PointMarkerTemplate">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <sci:EllipsePointMarker
                                                        Width="1"
                                                        Height="1"
                                                        Fill="White" />
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Foreground" Value="White" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </sci:SeriesSelectionModifier.SelectedSeriesStyle>
                            </sci:SeriesSelectionModifier>
                        </sci:ModifierGroup>
                    </sci:SciChartSurface.ChartModifier>

                    <!--  Create an X Axis with GrowBy  -->
                    <sci:SciChartSurface.XAxis>
                        <sci:NumericAxis AxisTitle="{Binding XAxisTitle}" />
                    </sci:SciChartSurface.XAxis>

                    <!--  Create a Y Axis with GrowBy. Optional bands give a cool look and feel for minimal performance impact  -->
                    <sci:SciChartSurface.YAxis>
                        <sci:NumericAxis AxisAlignment="Left" AxisTitle="{Binding YAisTitle}" />
                    </sci:SciChartSurface.YAxis>
                </sci:SciChartSurface>
                <!--<lvc:CartesianChart
                    x:Name="lvcChart"
                    MinHeight="510"
                    Margin="0,0,5,0"
                    Pan="Xy"
                    Zoom="Xy"
                    ZoomingSpeed="50"
                    DisableAnimations="True"

                    Series="{Binding LineSeriesCollection}">
                    <lvc:CartesianChart.AxisY>
                        <lvc:Axis></lvc:Axis>
                    </lvc:CartesianChart.AxisY>
                    <lvc:CartesianChart.AxisX>
                        <lvc:Axis></lvc:Axis>
                    </lvc:CartesianChart.AxisX>
                </lvc:CartesianChart>-->
            </Border>
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="30" />
                </Grid.RowDefinitions>
                <ListBox
                    Name="listBoxOne"
                    ItemContainerStyle="{StaticResource listBoxItem}"
                    ItemsSource="{Binding ListColor}"
                    SelectedIndex="{Binding ListIndex}">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Button
                                    Width="17"
                                    Height="17"
                                    Background="{Binding BgColor}"
                                    BorderBrush="{x:Null}"
                                    Command="{Binding Path=DataContext.ShowColorPickerCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBox}}"
                                    Tag="{Binding ID}" />
                                <CheckBox
                                    Margin="5"
                                    Command="{Binding Path=DataContext.SelectCheckBoxCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBox}}"
                                    IsChecked="{Binding Selector, Mode=TwoWay}" />
                                <TextBlock VerticalAlignment="Center" Text="{Binding Name}" />
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
                <DockPanel Grid.Row="1">
                    <CheckBox Content="Zoom" IsChecked="{Binding EnableZoom, Mode=TwoWay}" />
                    <CheckBox Content="Pan" IsChecked="{Binding EnablePan, Mode=TwoWay}" />
                    <CheckBox Content="Tip" IsChecked="{Binding EnableTip, Mode=TwoWay}" />
                </DockPanel>
            </Grid>
        </Grid>
    </Grid>
</Window>